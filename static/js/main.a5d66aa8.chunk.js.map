{"version":3,"sources":["services/total.js","services/positivePercentage.js","components/FeedbackOptions/FeedbackOptions.js","services/constants.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/App/App.js","index.js"],"names":["total","args","result","reduce","arg","acc","positivePercentage","num","Math","round","FeedbackOptions","onLeaveFeedback","type","name","value","onClick","FEEDBECK_LABEL","good","neutral","bad","positineFeedbek","Statistics","Notification","message","App","state","handleAddsFeedback","evt","target","setState","prevState","this","totalFeedback","positiveFeedback","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAMeA,EAND,WAAc,IAAD,uBAATC,EAAS,yBAATA,EAAS,gBACzB,IAAMC,EAASD,EAAKE,QAAO,SAACC,EAAKC,GAAN,OAAcA,EAAMD,IAAK,GAEpD,OAAOF,GCGMI,EANY,SAACN,EAAOO,GACjC,IAAML,EAAUK,EAAMP,EAAS,IAE/B,OAAOQ,KAAKC,MAAMP,ICiBLQ,EAjBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OACtB,6BACE,2BAAOC,KAAK,SAASC,KAAK,OAAOC,MAAM,OAAOC,QAASJ,IACvD,2BACEC,KAAK,SACLC,KAAK,UACLC,MAAM,UACNC,QAASJ,IAEX,2BAAOC,KAAK,SAASC,KAAK,MAAMC,MAAM,MAAMC,QAASJ,MCJ1CK,EARQ,CACrBC,KAAM,OACNC,QAAS,UACTC,IAAK,MACLnB,MAAO,QACPoB,gBAAiB,oBCiBJC,EAlBI,SAAC,GAAD,IAAGJ,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKnB,EAAvB,EAAuBA,MAAOM,EAA9B,EAA8BA,mBAA9B,OACjB,6BACE,qCAAOU,EAAeC,KAAtB,aAA+BA,IAC/B,qCAAOD,EAAeE,QAAtB,aAAkCA,IAClC,qCAAOF,EAAeG,IAAtB,aAA8BA,IAC9B,qCAAOH,EAAehB,MAAtB,aAAgCA,IAChC,qCAAOgB,EAAeI,gBAAtB,aAA0Cd,EAA1C,QCDWgB,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,2BAAIA,ICIrBC,E,2MACnBC,MAAQ,CAAER,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpCO,mBAAqB,SAAAC,GAAQ,IACnBd,EAASc,EAAIC,OAAbf,KAER,EAAKgB,UAAS,SAAAC,GAAS,sBAAQjB,EAAOiB,EAAUjB,GAAQ,O,wEAGhD,IAAD,EACwBkB,KAAKN,MAA5BR,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEjBa,EAAgBhC,EAAMiB,EAAMC,EAASC,GAErCc,EAAmB3B,EACvBN,EAAMiB,EAAMC,EAASC,GACrBF,GAGF,OACE,6BACE,qDACA,kBAAC,EAAD,CAAiBN,gBAAiBoB,KAAKL,qBACvC,0CACCM,EAAgB,EACf,kBAAC,EAAD,CACEf,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLnB,MAAOgC,EACP1B,mBAAoB2B,IAGtB,kBAAC,EAAD,CAAcV,QAAQ,2B,GAjCCW,a,MCFjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.a5d66aa8.chunk.js","sourcesContent":["const total = (...args) => {\n  const result = args.reduce((arg, acc) => acc + arg, 0);\n\n  return result;\n};\n\nexport default total;\n","const positivePercentage = (total, num) => {\n  const result = (num / total) * 100;\n\n  return Math.round(result);\n};\n\nexport default positivePercentage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ onLeaveFeedback }) => (\n  <div>\n    <input type=\"button\" name=\"good\" value=\"Good\" onClick={onLeaveFeedback} />\n    <input\n      type=\"button\"\n      name=\"neutral\"\n      value=\"Neutral\"\n      onClick={onLeaveFeedback}\n    />\n    <input type=\"button\" name=\"bad\" value=\"Bad\" onClick={onLeaveFeedback} />\n  </div>\n);\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","const FEEDBECK_LABEL = {\n  good: 'Good',\n  neutral: 'Neutral',\n  bad: 'Bad',\n  total: 'Total',\n  positineFeedbek: 'Positine feedbek',\n};\n\nexport default FEEDBECK_LABEL;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FEEDBECK_LABEL from '../../services/constants';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div>\n    <p>{`${FEEDBECK_LABEL.good}: ${good}`}</p>\n    <p>{`${FEEDBECK_LABEL.neutral}: ${neutral}`}</p>\n    <p>{`${FEEDBECK_LABEL.bad}: ${bad}`}</p>\n    <p>{`${FEEDBECK_LABEL.total}: ${total}`}</p>\n    <p>{`${FEEDBECK_LABEL.positineFeedbek}: ${positivePercentage}%`}</p>\n  </div>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport total from '../../services/total';\nimport positivePercentage from '../../services/positivePercentage';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Statistics from '../Statistics/Statistics';\nimport Notification from '../Notification/Notification';\n\nexport default class App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  handleAddsFeedback = evt => {\n    const { name } = evt.target;\n\n    this.setState(prevState => ({ [name]: prevState[name] + 1 }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    const totalFeedback = total(good, neutral, bad);\n\n    const positiveFeedback = positivePercentage(\n      total(good, neutral, bad),\n      good,\n    );\n\n    return (\n      <div>\n        <h1>Please leave feedback</h1>\n        <FeedbackOptions onLeaveFeedback={this.handleAddsFeedback} />\n        <h2>Statistics</h2>\n        {totalFeedback > 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalFeedback}\n            positivePercentage={positiveFeedback}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.module.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}